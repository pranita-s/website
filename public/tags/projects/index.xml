<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Pranita Sharma</title>
    <link>https://pranita-s.github.io/tags/projects/</link>
    <description>Recent content in Projects on Pranita Sharma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pranita-s.github.io/tags/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>InfraGraf</title>
      <link>https://pranita-s.github.io/project/infragraf/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/infragraf/</guid>
      <description>Introduction
 I was part of this project during my tenure at Mphasis NEXT Labs as an Intern and Software Engineer. InfraGraf® is a Big Data complex event processing engine which enables enterprises to innovate and make strategic decisions regarding their technology infrastructure through actionable insights by correlation and causation analysis structured and unstructured data. It models enterprise technology infrastructure as complex systems consisting of interconnected servers, network devices, internet of things, industrial equipment etc.</description>
    </item>
    
    <item>
      <title>Multi-server Architecture using Raspberry Pi</title>
      <link>https://pranita-s.github.io/project/raspberry/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/raspberry/</guid>
      <description>Introduction
 This was my BE project. I was part of team of four. There has been an upsurge observed in the number of small scale and/or home-based businesses. This has been fueled by the internet which makes it very easy to set up one and offer services from the comfort of one’s home, accompanied by the reduction in costs of hardware devices in recent times. However, there are a myriad of networking needs of such offices in order to function smoothly, and most of them are expensive.</description>
    </item>
    
    <item>
      <title>Particle Swarm Optimization</title>
      <link>https://pranita-s.github.io/project/pso/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/pso/</guid>
      <description>Introduction
 The goal was to exibit the power of PSO with respect to DE as a tuner for SVM. For this comparison, we (a team of three) referred the paper &amp;ldquo;Easy over hard - A Case Study on Deep Learning&amp;rdquo; for the problem statement, data and performance metrics. DE has crossover and mutation functions for its implementation. We chose PSO for comparison as it has simpler implementation which revolves around the two update equations for velocity and position of particle.</description>
    </item>
    
    <item>
      <title>Search into Conversation</title>
      <link>https://pranita-s.github.io/project/alexa/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/alexa/</guid>
      <description>Introduction
 Conversational user interfaces are becoming increasingly used for a variety of research needs. Some are voice-activated (such as Alexa, Siri, and Google Now), but many are text-oriented chatbots appearing as assistants in the context of a larger application. Text chatbots are being considered for providing help in using our products, but also for improving the legal research experience Given a set of case law and judge data, answer research questions using a text-oriented, conversational interface.</description>
    </item>
    
    <item>
      <title>Solving Kinematics Word Problem</title>
      <link>https://pranita-s.github.io/project/rnn/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/rnn/</guid>
      <description>Problem Description  Machine is fed with a Kinematics word problem. It has to parse and understand the problem, and decide which equation will be required to solve the problem from the three equations-  s = u + a*t v*v = u*u + 2*a*s s = u*t + 0.5*a*t*t  To achieve this, machine has to identify given entites such as velocity, displacement and time and also identify which entity has to be computed.</description>
    </item>
    
    <item>
      <title>Summarization of Document</title>
      <link>https://pranita-s.github.io/project/semantic/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pranita-s.github.io/project/semantic/</guid>
      <description>Introduction
 I was part of the team during my tenure at Mphasis NEXT Labs as a Software Engineer. This project is aimed to summarize grammatically written English document by build a queriable directed graph based on semantics and context (i.e. Event and Action). The query on graph can retrieve information about action and its effect, and entity and its role. We adopted various NLP and text mining methodologies to build the graph and stored the graph in Neo4j for effective information retrieval.</description>
    </item>
    
  </channel>
</rss>